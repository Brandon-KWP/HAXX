<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= event.nom %> | HAXX
    </title>
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<body>

<%- include('../../partials/navbar') %>

<main class="event-detail">
    <div class="event-header">
        <h1>
            <%= event.nom %>
        </h1>

        <div class="event-info">
            <div class="info-item">
                <i class="fas fa-calendar"></i>
                <span>Date: <%= new Date(event.date).toLocaleDateString('fr-FR', { weekday: 'long' ,
                        year: 'numeric' , month: 'long' , day: 'numeric' }) %></span>
            </div>

            <% if(event.ville) { %>
                <div class="info-item">
                    <i class="fas fa-map-marker-alt"></i>
                    <span>Lieu: <%= event.ville %></span>
                </div>
                <% } %>

    <% if(event.places_available) { %>
        <div class="info-item">
            <i class="fas fa-users"></i>
            <div class="progress-container">
                <%
                const totalPlaces = event.places_available || 64;
                const placesOccupees = event.participants ? event.participants.length : 0;
                const pourcentage = Math.min((placesOccupees / totalPlaces) * 100, 100);
                const placesRestantes = totalPlaces - placesOccupees;
                %>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: <%- pourcentage %>%"></div>
                    <span class="progress-text">
                        <%- placesRestantes %> places disponibles (<%- placesOccupees %>/<%- totalPlaces %>)
                    </span>
                </div>
            </div>
        </div>
    <% } %>

    <div class="event-content">
        <% if(event.image) { %>
            <img src="<%= event.image %>" alt="<%= event.nom %>" class="event-cover">
            <% } %>
                <div class="event-description">
                    <p>
                        <%= event.description %>
                    </p>
                </div>
                <div class="event-actions">
                    <% if(locals.isAuthenticated) { %>
                        <button onclick="openRegisterModal()" class="btn-register"
                            <%=event.places_available <=0 ? 'disabled' : '' %>>
                            S'inscrire à l'événement
                        </button>
                        <% } else { %>
                            <a href="/login" class="btn-register">Connectez-vous pour
                                vous inscrire</a>
                            <% } %>
                </div>
    </div>

    <!-- Modal d'inscription -->
    <div id="registerModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Confirmation d'inscription</h2>
            <p>Voulez-vous vraiment vous inscrire à l'événement "<%= event.nom %>" ?</p>
            <button onclick="registerForEvent('<%= event._id %>')" class="btn-register">
                Confirmer l'inscription
            </button>
        </div>
    </div>

    <a href="/evenement" class="btn-return">Retour aux événements</a>
</main>

<%- include('../../partials/footer') %>

<script>
    const modal = document.getElementById('registerModal');
    const closeBtn = document.getElementsByClassName('close')[0];

    function openRegisterModal() {
        modal.style.display = "block";
    }

    closeBtn.onclick = function () {
        modal.style.display = "none";
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    // Ajoutez une variable globale pour totalPlaces au début du script
    const eventDetails = {
        totalPlaces: '<%- event.places_available || 64 %>',
        eventId: '<%= event._id %>'
    };

    async function registerForEvent(eventId) {
        try {
            const response = await fetch(`/evenement/${eventId}/register`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (response.ok) {
                // Mise à jour de la barre de progression
                const progressFill = document.querySelector('.progress-fill');
                const progressText = document.querySelector('.progress-text');
                const placesOccupees = data.participants ? data.participants.length : 0;
                const pourcentage = Math.min((placesOccupees / eventDetails.totalPlaces) * 100, 100);
                const placesRestantes = eventDetails.totalPlaces - placesOccupees;

                progressFill.style.width = `${pourcentage}%`;
                progressText.textContent = `${placesRestantes} places disponibles (${placesOccupees}/${eventDetails.totalPlaces})`;

                // Animation de mise à jour
                progressFill.style.animation = 'pulse 0.5s ease';
                setTimeout(() => {
                    progressFill.style.animation = '';
                }, 500);

                alert('Inscription réussie !');
            } else {
                alert(data.message || 'Erreur lors de l\'inscription');
            }
        } catch (error) {
            console.error('Erreur:', error);
            alert('Erreur lors de l\'inscription');
        }
        modal.style.display = "none";
    }

    document.addEventListener('DOMContentLoaded', () => {
        const themeToggle = document.getElementById('theme-toggle');
        const body = document.body;

        // Vérifier la préférence sauvegardée
        const darkMode = localStorage.getItem('darkMode');
        if (darkMode === 'enabled') {
            body.classList.add('dark-mode');
            themeToggle.checked = true;
        }

        themeToggle.addEventListener('change', () => {
            if (themeToggle.checked) {
                body.classList.add('dark-mode');
                localStorage.setItem('darkMode', 'enabled');
            } else {
                body.classList.remove('dark-mode');
                localStorage.setItem('darkMode', null);
            }
        });
    });
</script>

</body>

</html>